{"ast":null,"code":"import { HttpHeaders } from '@angular/common/http';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport class BackendService {\n  constructor(http) {\n    this.http = http;\n    this.baseUrl = '';\n    this.baseUrl = 'http://localhost:8080/empleado';\n  }\n  getAll() {\n    console.log('obteniendo todos los datos');\n    let response = this.http.get(this.baseUrl);\n    return response;\n  }\n  getOne(id) {\n    console.log('obteniendo un dato');\n    let response = this.http.get(`${this.baseUrl}/${id}`);\n    return response;\n  }\n  post(data) {\n    console.log('enviando un dato');\n    const headers = new HttpHeaders({\n      'Content-Type': 'application/json'\n    });\n    let response = this.http.post(this.baseUrl, data, {\n      headers: headers\n    });\n    return response;\n  }\n  put(data, id) {\n    console.log('actualizando un dato');\n    const headers = new HttpHeaders({\n      'Content-Type': 'application/json'\n    });\n    let response = this.http.put(`${this.baseUrl}/${id}`, data, {\n      headers: headers\n    });\n    return response;\n  }\n  delete(id) {\n    console.log('eliminando un dato');\n    let response = this.http.delete(`${this.baseUrl}/${id}`);\n    return response;\n  }\n  static #_ = this.ɵfac = function BackendService_Factory(t) {\n    return new (t || BackendService)(i0.ɵɵinject(i1.HttpClient));\n  };\n  static #_2 = this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: BackendService,\n    factory: BackendService.ɵfac,\n    providedIn: 'root'\n  });\n}","map":{"version":3,"names":["HttpHeaders","BackendService","constructor","http","baseUrl","getAll","console","log","response","get","getOne","id","post","data","headers","put","delete","_","i0","ɵɵinject","i1","HttpClient","_2","factory","ɵfac","providedIn"],"sources":["/home/ian/angularProjects/DAPP01Practica06/src/app/backend.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { Observable } from 'rxjs';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class BackendService {\n\n  baseUrl = ''\n\n  constructor(private http: HttpClient) {\n    this.baseUrl = 'http://localhost:8080/empleado'\n  }\n\n  getAll(): Observable<any>{\n    console.log('obteniendo todos los datos')\n    let response = this.http.get(this.baseUrl)\n    return response\n  }\n\n  getOne(id: number): Observable<any>{\n    console.log('obteniendo un dato')\n    let response = this.http.get(`${this.baseUrl}/${id}`)\n    return response\n  }\n\n  post(data: any): Observable<any>{\n    console.log('enviando un dato')\n    const headers = new HttpHeaders({ 'Content-Type': 'application/json' })\n    let response = this.http.post(this.baseUrl, data, {headers: headers})\n    return response\n  }\n\n  put(data: any, id: number): Observable<any>{\n    console.log('actualizando un dato')\n    const headers = new HttpHeaders({ 'Content-Type': 'application/json' })\n    let response = this.http.put(`${this.baseUrl}/${id}`, data, {headers: headers})\n    return response\n  }\n\n  delete(id: number): Observable<any>{\n    console.log('eliminando un dato')\n    let response = this.http.delete(`${this.baseUrl}/${id}`)\n    return response\n  }\n}\n"],"mappings":"AACA,SAAqBA,WAAW,QAAQ,sBAAsB;;;AAM9D,OAAM,MAAOC,cAAc;EAIzBC,YAAoBC,IAAgB;IAAhB,KAAAA,IAAI,GAAJA,IAAI;IAFxB,KAAAC,OAAO,GAAG,EAAE;IAGV,IAAI,CAACA,OAAO,GAAG,gCAAgC;EACjD;EAEAC,MAAMA,CAAA;IACJC,OAAO,CAACC,GAAG,CAAC,4BAA4B,CAAC;IACzC,IAAIC,QAAQ,GAAG,IAAI,CAACL,IAAI,CAACM,GAAG,CAAC,IAAI,CAACL,OAAO,CAAC;IAC1C,OAAOI,QAAQ;EACjB;EAEAE,MAAMA,CAACC,EAAU;IACfL,OAAO,CAACC,GAAG,CAAC,oBAAoB,CAAC;IACjC,IAAIC,QAAQ,GAAG,IAAI,CAACL,IAAI,CAACM,GAAG,CAAC,GAAG,IAAI,CAACL,OAAO,IAAIO,EAAE,EAAE,CAAC;IACrD,OAAOH,QAAQ;EACjB;EAEAI,IAAIA,CAACC,IAAS;IACZP,OAAO,CAACC,GAAG,CAAC,kBAAkB,CAAC;IAC/B,MAAMO,OAAO,GAAG,IAAId,WAAW,CAAC;MAAE,cAAc,EAAE;IAAkB,CAAE,CAAC;IACvE,IAAIQ,QAAQ,GAAG,IAAI,CAACL,IAAI,CAACS,IAAI,CAAC,IAAI,CAACR,OAAO,EAAES,IAAI,EAAE;MAACC,OAAO,EAAEA;IAAO,CAAC,CAAC;IACrE,OAAON,QAAQ;EACjB;EAEAO,GAAGA,CAACF,IAAS,EAAEF,EAAU;IACvBL,OAAO,CAACC,GAAG,CAAC,sBAAsB,CAAC;IACnC,MAAMO,OAAO,GAAG,IAAId,WAAW,CAAC;MAAE,cAAc,EAAE;IAAkB,CAAE,CAAC;IACvE,IAAIQ,QAAQ,GAAG,IAAI,CAACL,IAAI,CAACY,GAAG,CAAC,GAAG,IAAI,CAACX,OAAO,IAAIO,EAAE,EAAE,EAAEE,IAAI,EAAE;MAACC,OAAO,EAAEA;IAAO,CAAC,CAAC;IAC/E,OAAON,QAAQ;EACjB;EAEAQ,MAAMA,CAACL,EAAU;IACfL,OAAO,CAACC,GAAG,CAAC,oBAAoB,CAAC;IACjC,IAAIC,QAAQ,GAAG,IAAI,CAACL,IAAI,CAACa,MAAM,CAAC,GAAG,IAAI,CAACZ,OAAO,IAAIO,EAAE,EAAE,CAAC;IACxD,OAAOH,QAAQ;EACjB;EAAC,QAAAS,CAAA,G;qBAtCUhB,cAAc,EAAAiB,EAAA,CAAAC,QAAA,CAAAC,EAAA,CAAAC,UAAA;EAAA;EAAA,QAAAC,EAAA,G;WAAdrB,cAAc;IAAAsB,OAAA,EAAdtB,cAAc,CAAAuB,IAAA;IAAAC,UAAA,EAFb;EAAM","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}